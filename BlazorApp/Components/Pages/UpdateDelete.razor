@layout MainLayout
@page "/UpdateDelete"
@inject DatabaseService databaseService
@inject NavigationManager navManager
@inject AuthenticationService authService

<PageTitle>Update and Delete Book</PageTitle>



@if (authService.IsAuthenticated)
    LoadBooksFromDatabase();
{

    @if (allUserBooks != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Author</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>ImagePath</th>
                    <th>Language</th>
                    <th>ReleaseDate</th>
                    <th>Format</th>
                    <th>ISBN</th>
                    <th>Weight</th>
                    <th>Pages</th>
                    <th>Type</th>
                    <th>Condition</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in allUserBooks)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Title" />
                            }
                            else
                            {
                                @item.Title
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Description" />
                            }
                            else
                            {
                                @item.Description
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Author" />
                            }
                            else
                            {
                                @item.Author
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Category" />
                            }
                            else
                            {
                                @item.Category
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Price" />
                            }
                            else
                            {
                                @item.Price
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.ImagePath" />
                            }
                            else
                            {
                                @item.ImagePath
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Language" />
                            }
                            else
                            {
                                @item.Language
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="date" @bind="editingItem.ReleaseDate" />
                            }
                            else
                            {
                                @item.ReleaseDate
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Format" />
                            }
                            else
                            {
                                @item.Format
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.ISBN" />
                            }
                            else
                            {
                                @item.ISBN
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Weight" />
                            }
                            else
                            {
                                @item.Weight
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="number" @bind="editingItem.Pages" />
                            }
                            else
                            {
                                @item.Pages
                            }
                        </td>
                    <td>
                        @if (editingItem != null && editingItem.Id == item.Id)
                        {
                            <input type="text" @bind="editingItem.Type" />
                        }
                        else
                        {
                            @item.Type
                        }
                    </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                                <input type="text" @bind="editingItem.Condition" />
                            }
                            else
                            {
                                @item.Condition
                            }
                        </td>
                        <td>
                            @if (editingItem != null && editingItem.Id == item.Id)
                            {
                            <button class="btn btn-success" @onclick="SaveChanges">Gem Ændringer</button>
                            }
                            else
                            {
                            <button class="btn btn-primary" @onclick="() => EditItem(item)">Rediger</button>
                            <button class="btn btn-danger" @onclick="() => DeleteItem(item)">Slet</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
    else
    {
        <p>No books found.</p>
    }
}


@code {
    public Book UserBooks { get; set; }
    public List<Book> allUserBooks { get; set; }
    private string errorMessage;
    private Book editingItem;
    
 
    
    private void LoadBooksFromDatabase()
    {
      
        
        allUserBooks = databaseService.GetAllUserBooks(authService.CurrentUser.UserID);
        
        
       
    }

    void EditItem(Book item)
    {
        editingItem = new Book
            {
                Id = item.Id,
                Title = item.Title,
                Description = item.Description,
                Author = item.Author,
                Category = item.Category,
                Price = item.Price,
                ImagePath = item.ImagePath,
                Language = item.Language,
                ReleaseDate = item.ReleaseDate,
                Format = item.Format,
                ISBN = item.ISBN,
                Weight = item.Weight,
                Pages = item.Pages,
                Type = item.Type,
                Condition = item.Condition
            };
    }

    async Task DeleteItem(Book item)
    {
        await databaseService.DeleteBookAsync(item.Id);
    }

    async Task SaveChanges()
    {
        Book itemToUpdate = null;


        foreach (var book in allUserBooks)
        {

            if (book.Id == editingItem.Id)
            {

                itemToUpdate = book;
                break; // Stop loopet, da vi har fundet det, vi leder efter
            }
        }

        if (itemToUpdate != null)
        {
            itemToUpdate.Id = editingItem.Id;
            itemToUpdate.Title = editingItem.Title;
            itemToUpdate.Description = editingItem.Description;
            itemToUpdate.Author = editingItem.Author;
            itemToUpdate.Category = editingItem.Category;
            itemToUpdate.Price = editingItem.Price;
            itemToUpdate.ImagePath = editingItem.ImagePath;
            itemToUpdate.Language = editingItem.Language;
            itemToUpdate.ReleaseDate = editingItem.ReleaseDate;
            itemToUpdate.Format = editingItem.Format;
            itemToUpdate.ISBN = editingItem.ISBN;
            itemToUpdate.Weight = editingItem.Weight;
            itemToUpdate.Pages = editingItem.Pages;
            itemToUpdate.Type = editingItem.Type;
            itemToUpdate.Condition = editingItem.Condition;

            await databaseService.UpdateBookAsync(itemToUpdate);

        }
        editingItem = null;
    }
}
