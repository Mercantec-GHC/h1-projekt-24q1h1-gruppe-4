@page "/bookpage/{productId}"
@inject List<UsedBooks> allProducts
@using Domain_Models
@inject NavigationManager navManager
@inject IWebHostEnvironment _hostingEnvironment
@using BlazorApp.Services

<PageTitle>Buy Books</PageTitle>

<h1>Books</h1>

@code {
    [Parameter]
    public string productId { get; set; }

    public UsedBooks ProductToShow;

    protected override void OnInitialized()
    {
        // Ensure productId is valid and within the range of allProducts
        if (int.TryParse(productId, out int parsedId) && parsedId >= 0 && parsedId < allProducts.Count)
        {
            ProductToShow = allProducts[parsedId];
        }
        else
        {
            // Handle invalid productId (e.g., redirect to error page)
            navManager.NavigateTo("/error");
        }
    }
}

@if (ProductToShow != null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <img src="@ProductToShow.ImagePath" alt="@ProductToShow.Title" class="img-fluid" />
            </div>
            <div class="col-md-6">
                <h1>@ProductToShow.Title</h1>
                <p>Author: @ProductToShow.Author</p>
                <p>Condition: @ProductToShow.Condition</p>
                <p>Category: @ProductToShow.Category</p>
                <p>Price: @ProductToShow.Price</p>
                <p>Language: @ProductToShow.Language</p>
                <p>Release Date: @ProductToShow.ReleaseDate</p>
                <p>Format: @ProductToShow.Format</p>
                <p>ISBN: @ProductToShow.ISBN</p>
                <p>Weight: @ProductToShow.Weight</p>
                <p>Pages: @ProductToShow.Pages</p>
                <p>Description: @ProductToShow.Description</p>
                <p>Stars: @ProductToShow.Stars</p>
                <p>Type: @ProductToShow.Type</p>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

